<UserControl x:Class="FlyingColorsDesktop.Views.BattleGroupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:toolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
			 xmlns:local="clr-namespace:FlyingColorsDesktop.Views"
			 xmlns:prism="http://www.codeplex.com/prism"
             mc:Ignorable="d" 
             d:DesignHeight="Auto" d:DesignWidth="Auto">

	<!--<UserControl.Resources>
		<Style TargetType="{x:Type DataGridCell}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsDamaged, Mode=OneWay}" Value="True">
					<Setter Property="Background" Value="Yellow" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>-->
	<UserControl.Resources>
		<!--<Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="RoyalBlue" />
			<Setter Property="BorderThickness" Value="1" />
			--><!--<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridCell}">
						<Border
							Background="Transparent"									
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="0"
							SnapsToDevicePixels="True">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>--><!--
		</Style>-->
	</UserControl.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"></ColumnDefinition>
			<ColumnDefinition Width="Auto"></ColumnDefinition>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"></RowDefinition>			
		</Grid.RowDefinitions>

		<DataGrid
			Name="shipGrid"
			ItemsSource="{Binding Model.Ships}"
			AutoGenerateColumns="False"
			ClipToBounds="True"
			SelectionMode="Single"
			SelectionUnit="FullRow"
			SelectionChanged="shipGrid_SelectionChanged"
			SelectedCellsChanged="shipGrid_SelectedCellsChanged"
			CanUserAddRows="False"
			CanUserDeleteRows="False"
			CanUserReorderColumns="False"
			CanUserResizeColumns="False"
			CanUserResizeRows="False"
			CanUserSortColumns="False"
			IsSynchronizedWithCurrentItem="True"
			RowHeaderWidth="10"
			HeadersVisibility="All"
			GridLinesVisibility="None"
			RowDetailsVisibilityMode="Collapsed"
			BorderThickness="0,0,0,0"		
			ScrollViewer.CanContentScroll="True"
			ScrollViewer.VerticalScrollBarVisibility="Visible"
			ScrollViewer.HorizontalScrollBarVisibility="Auto"
			Background="White"
			Foreground="Black"
			Style="{DynamicResource PrettierDataGridStyle}">		

			<DataGrid.Resources>
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="RoyalBlue" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="RoyalBlue" />-->
				<Style x:Key="PrettierDataGridStyle" TargetType="{x:Type DataGrid}">

					<!-- Make the border and grid lines a little less imposing -->
					<Setter Property="BorderBrush" Value="#DDDDDD" />
					<Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
					<Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

					<Setter Property="RowStyle">
						<Setter.Value>
							<Style TargetType="{x:Type DataGridRow}">
								<Style.Triggers>
									<!-- Highlight a grid row as the mouse passes over -->
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Background" Value="SandyBrown" />
										<Setter Property="BorderBrush" Value="SandyBrown" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Setter.Value>
					</Setter>


					<Setter Property="CellStyle">
						<Setter.Value>
							<Style TargetType="{x:Type DataGridCell}">
								<Style.Triggers>
									<!-- Highlight selected rows -->
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="Background" Value="LightGreen" />
										<Setter Property="BorderBrush" Value="LightGreen" />
										<Setter Property="Foreground" Value="Black" />
									</Trigger>
								</Style.Triggers>

								<!-- Add some padding around the contents of a cell -->
								<Setter Property="Padding" Value="4,3,4,3" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type DataGridCell}">
											<Border Padding="{TemplateBinding Padding}"
													Background="{TemplateBinding Background}">
												<ContentPresenter />
											</Border>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
				</Style>
			</DataGrid.Resources>
		
			<DataGrid.Columns>
			
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Button x:Name="buttonDetails" ButtonBase.Click="Details_Click">
								<local:CustomImageControl ImageData="{Binding Flag}"></local:CustomImageControl>
							</Button>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			
				<DataGridTextColumn
					Header="Ship"
					Binding="{Binding Name}"
					FontWeight="Bold"
					MaxWidth="160"
					MinWidth="160"
					IsReadOnly="True">
					<!--<DataGridTextColumn.ElementStyle>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="ToolTip" Value="The ship's name" />
							<Setter Property="Background" Value="White" />
							<Setter Property="TextWrapping" Value="Wrap" />
							<Setter Property="TextAlignment" Value="Left" />
							<Setter Property="Foreground" Value="Black" />
						</Style>
					</DataGridTextColumn.ElementStyle>-->
				</DataGridTextColumn>
			
				<DataGridTextColumn
					Header="Rate"
					Binding="{Binding CurrentRate}"
					MaxWidth="34"
					MinWidth="34"
					IsReadOnly="True">
					<!--<DataGridTextColumn.ElementStyle>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="ToolTip" Value="The current rate" />
							<Setter Property="Background" Value="Yellow" />
							<Setter Property="TextWrapping" Value="Wrap" />
							<Setter Property="TextAlignment" Value="Center" />
							<Setter Property="Foreground" Value="Black" />
						</Style>
					</DataGridTextColumn.ElementStyle>-->
				</DataGridTextColumn>
			
				<DataGridTemplateColumn
					MaxWidth="50"
					MinWidth="50"
					Header="Hull Hits">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<toolkit:IntegerUpDown
								Value="{Binding HullHits}"
								Minimum="0"
								Maximum="{Binding TotalDamageCapacity}"
								Increment="1">
							</toolkit:IntegerUpDown>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn
					MaxWidth="50"
					MinWidth="50"
					Header="Rigging Hits">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<toolkit:IntegerUpDown
								Value="{Binding RiggingHits}"
								Minimum="0"
								Maximum="15"
								Increment="1">
							</toolkit:IntegerUpDown>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn
					MaxWidth="50"
					MinWidth="50"
					Header="Marine Hits">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<toolkit:IntegerUpDown
								Value="{Binding MarineHits}"
								Minimum="0"
								Maximum="4"
								Increment="1">
							</toolkit:IntegerUpDown>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Button x:Name="FireButton" ButtonBase.Click="Fire_Click">			
								Fire!
							</Button>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
						
			</DataGrid.Columns>
		
			<DataGrid.RowDetailsTemplate>
				<DataTemplate>
					<Border
						CornerRadius="2,2,2,2"
						BorderBrush="Black"
						Background="White"
						BorderThickness="0,0,0,1"
						Margin="10,0,10,5"
						Padding="5">
						<StackPanel Orientation="Horizontal" Margin="5" Background="White">
							<CheckBox IsChecked="{Binding FullSails}" Content="Full Sails" Height="16" Margin="5"/>
							<CheckBox IsChecked="{Binding Anchored}" Content="Anchored" Height="16" Margin="5"/>
							<CheckBox IsChecked="{Binding Adrift}" Content="Adrift" Height="16" Margin="5"/>
							<CheckBox IsChecked="{Binding Aground}" Content="Aground" Height="16" Margin="5"/>
							<CheckBox IsChecked="{Binding InIrons}" Content="In Irons" Height="16" Margin="5"/>
							<CheckBox IsChecked="{Binding OnFire}" Content="On Fire" Height="16" Margin="5"/>
							<CheckBox IsChecked="{Binding Captured}" Content="Captured" Height="16" Margin="5"/>
							<CheckBox IsChecked="{Binding Struck}" Content="Struck!" Height="16" Margin="5"/>
						</StackPanel>
					</Border>
				</DataTemplate>
			</DataGrid.RowDetailsTemplate>
		
		</DataGrid>

		<ContentControl
			ClipToBounds="True"
			prism:RegionManager.RegionName="FireAttackRegion">
			
		</ContentControl>

	</Grid>	
		
</UserControl>
